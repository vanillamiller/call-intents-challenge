AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
  pAppName:
    Type: String
    Description: Application Name deployed in this stack
    Default: call-intent
  pEnvironmentName:
    Type: String
    Default: dev
    Description: The name of the specific stack deployment e.g. 'dev'

Resources:
  AppCodeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${pAppName}-${pEnvironmentName}-app-bucket-${AWS::AccountId}
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      AccessControl: Private
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"

  CloudFrontOAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub ${pAppName}-oac
        Description: "OAC for CloudFront access"
        SigningProtocol: sigv4
        SigningBehavior: always
        OriginAccessControlOriginType: s3

  AppBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AppCodeBucket
      PolicyDocument:
        Statement:
          - Sid: AllowCloudFrontOACAccess
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: "s3:GetObject"
            Resource: !Sub "${AppCodeBucket.Arn}/*"
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${AppDistribution}"
          - Sid: BlockNonTLSTraffic
            Action: s3:*
            Effect: Deny
            Resource:
              - !Join ["", [!GetAtt AppCodeBucket.Arn, ""]]
              - !Join ["", [!GetAtt AppCodeBucket.Arn, "/*"]]
            Principal: "*"
            Condition:
              Bool:
                "aws:SecureTransport":
                  - false

  AppDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - Id: AppCodeS3Origin
            DomainName: !GetAtt AppCodeBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: ""
            OriginAccessControlId: !Ref CloudFrontOAC
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
        Enabled: true
        HttpVersion: "http2"
        Comment: !Sub Cloudfront Distribution pointing to S3 bucket ${pAppName}
        DefaultRootObject: index.html
        CustomErrorResponses:
          - ErrorCachingMinTTL: 300
            ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCachingMinTTL: 300
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          AllowedMethods: ["GET", "HEAD", "OPTIONS"]
          TargetOriginId: AppCodeS3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
          ResponseHeadersPolicyId: 60669652-455b-4ae9-85a4-c4c02393f86c
        PriceClass: PriceClass_All

Outputs:
  CloudFrontId:
    Value: !Ref AppDistribution
    # Export:
    #   Name: !Sub ${AWS::StackName}-CloudfrontId

  AppCodeBucketName:
    Value: !Ref AppCodeBucket
    # Export:
    #   Name: !Sub ${AWS::StackName}-AppCodeBucketName